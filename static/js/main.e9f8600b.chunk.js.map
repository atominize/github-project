{"version":3,"sources":["api/github-api.js","utils/utils.js","styles.js","components/User/User.jsx","components/Repository.jsx","components/Repositories.jsx","components/Organisation.jsx","components/Organistions.jsx","App.js","index.js"],"names":["BASE_URL","getUserData","username","axios","all","get","then","user","orgs","data","styles","makeStyles","theme","root","props","padding","spacing","buttons","marginTop","cardGrid","card","height","display","flexDirection","cardContent","flexGrow","textField","backdrop","zIndex","drawer","color","User","classes","useState","setUsername","text","setText","error","setError","useEffect","setAppBarName","CssBaseline","className","Container","maxWidth","align","Typography","variant","gutterBottom","TextField","required","label","size","inputProps","helperText","value","onChange","e","preventDefault","target","fixed","Button","type","data-testid","onClick","isUsernameEmpty","window","navigator","onLine","catch","isAValideUsername","result","bool","history","push","Repository","repo","name","Repositories","location","state","setName","showBackdrop","setShowBackdrop","isRepoLoaded","setIsRepoLoaded","isOrgsLoaded","setIsOrgsLoaded","userRepo","setUserRepo","userOrgs","setUserOrgs","url","response","getRepos","userData","length","Backdrop","open","CircularProgress","Grid","container","map","item","xs","sm","md","Card","CardContent","id","disabled","Organisation","org","login","description","Organistions","goBack","App","appBarName","AppBar","position","Toolbar","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"+SAGMA,EAAW,yBASjB,SAASC,EAAYC,GACnB,OAAOC,IACJC,IAAI,CACHD,IAAME,IAAN,UAAaL,EAAb,kBAA+BE,IAC/BC,IAAME,IAAN,UAAaL,EAAb,kBAA+BE,EAA/B,YAEDI,MAAK,mCAAEC,EAAF,KAAQC,EAAR,WAAmB,CACvBD,KAAMA,EAAKE,KACXD,KAAMA,EAAKC,SClBV,I,SC2BQC,EA3BAC,aAAW,SAACC,GAAD,MAAY,CACpCC,KAAM,SAACC,GAAD,MAAY,CAChBC,QAASH,EAAMI,QAAQ,EAAG,EAAG,KAE/BC,QAAS,iBAAO,CACdC,UAAW,SAEbC,SAAU,iBAAO,CACfD,UAAW,SAEbE,KAAM,iBAAO,CACXC,OAAQ,OACRC,QAAS,OACTC,cAAe,WAEjBC,YAAa,iBAAO,CAClBC,SAAU,IAEZC,UAAW,iBAAO,CAChBR,UAAW,SAEbS,SAAU,iBAAO,CACfC,OAAQhB,EAAMgB,OAAOC,OAAS,EAC9BC,MAAO,a,OC4FIC,EArGF,SAACjB,GACZ,IAAMkB,EAAUtB,IAEhB,EAAgCuB,mBAAS,IAAzC,mBAAO/B,EAAP,KAAiBgC,EAAjB,KACA,EAAwBD,mBAAS,IAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAA0BH,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KA6CA,OAJAC,qBAAU,WACRzB,EAAM0B,cAAc,qBAIpB,qCACE,cAACC,EAAA,EAAD,IACA,+BACE,qBAAKC,UAAWV,EAAQnB,KAAxB,SACE,cAAC8B,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,uBAAMC,MAAM,SAAZ,UACE,cAACC,EAAA,EAAD,CACEC,QAAQ,KACRF,MAAM,SACNf,MAAM,cACNkB,cAAY,EAJd,qBAQA,cAACF,EAAA,EAAD,CAAYC,QAAQ,KAApB,gDAGA,cAACE,EAAA,EAAD,CACEP,UAAWV,EAAQN,UACnBqB,QAAQ,WACRG,UAAQ,EACRC,MAAM,WACNC,KAAK,QACLC,WAAY,CAAE,cAAe,kBAC7BhB,MAAOA,EACPiB,WAAYnB,EACZoB,MAAOrD,EACPsD,SAvEM,SAACC,GACnBA,EAAEC,iBACFxB,EAAYuB,EAAEE,OAAOJ,UAuEX,cAACZ,EAAA,EAAD,CAAWC,SAAS,KAAKgB,OAAK,EAA9B,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,SACLpB,UAAWV,EAAQf,QACnB8B,QAAQ,YACRjB,MAAM,UACNsB,KAAK,QACLW,cAAY,aACZC,QA5EK,SAACP,GAEpB,OADAA,EAAEC,iBF3ByB,SAACxD,GAC9B,MAAoB,KAAbA,EE2BD+D,CAAgB/D,IAClBkC,EAAQ,uBACRE,GAAS,KAGTA,GAAS,GFjBN4B,OAAOC,UAAUC,QEyBpB9B,GAAS,QFrCkB,SAACpC,GAQhC,OAPeD,EAAYC,GACxBI,MAAK,WACJ,OAAO,KAER+D,OAAM,WACL,OAAO,KEiCTC,CAAkBpE,GACfI,MAAK,SAACiE,GACL,OAAOA,KAERjE,MAAK,SAACkE,GACDA,EACF1D,EAAM2D,QAAQC,KAAK,cAAe,CAAExE,cAEpCkC,EAAQ,oBACRE,GAAS,SAfbF,EAAQ,+BACRE,GAAS,MAyDC,mCClFDqC,EAZI,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEpB,OACE,qCACE,cAACnC,EAAA,EAAD,IACA,cAACK,EAAA,EAAD,CAAYhB,MAAM,UAAUiB,QAAQ,KAApC,SACG6B,EAAKC,W,6CC+HCC,EAxHM,SAAChE,GACpB,IAAMkB,EAAUtB,IAEVR,EAAWY,EAAM2D,QAAQM,SAASC,MAClCxC,EAAgB1B,EAAM0B,cAE5B,EAAwBP,mBAAS,MAAjC,mBAAO4C,EAAP,KAAaI,EAAb,KACA,EAAwChD,oBAAS,GAAjD,mBAAOiD,EAAP,KAAqBC,EAArB,KACA,EAAwClD,oBAAS,GAAjD,mBAAOmD,EAAP,KAAqBC,EAArB,KACA,EAAwCpD,oBAAS,GAAjD,mBAAOqD,EAAP,KAAqBC,EAArB,KACA,EAAgCtD,mBAAS,IAAzC,mBAAOuD,EAAP,KAAiBC,EAAjB,KACA,EAAgCxD,mBAAS,IAAzC,mBAAOyD,EAAP,KAAiBC,EAAjB,KAuCA,OAzBApD,qBAAU,YLlCZ,SAAkBrC,GAChB,IAAM0F,EAAG,UAAM5F,EAAN,kBAAwBE,EAAxB,uBACT,OAAOC,IAAME,IAAIuF,GAAKtF,MAAK,SAAAuF,GAAQ,OAAIA,EAASpF,SKiC9CqF,CAAS5F,EAASA,UAAUI,MAAK,SAACiE,GAChCkB,EAAYlB,GACZc,GAAgB,GAChBF,GAAgB,QAEjB,CAACjF,EAASA,WAEbqC,qBAAU,WACRtC,EAAYC,EAASA,UAAUI,MAAK,SAACyF,GACnCJ,EAAYI,EAASvF,MAErByE,EAAQc,EAASxF,KAAKsE,MACE,IAApBa,EAASM,QACbT,GAAgB,QAEjB,CAACrF,EAASA,SAAUwF,EAASM,SAEhCzD,qBAAU,WACK,OAATsC,GACFI,EAAQ/E,EAASA,UAEnBsC,EAAc,GAAD,OAAIqC,EAAJ,sBACZ,CAACA,EAAMrC,EAAetC,EAASA,WAGhC,+BACE,sBAAKwC,UAAWV,EAAQnB,KAAxB,UACE,cAAC4B,EAAA,EAAD,IACCyC,GACC,cAACvC,EAAA,EAAD,CAAWD,UAAWV,EAAQb,SAAUyB,SAAS,KAAKC,MAAM,SAA5D,SACE,cAACoD,EAAA,EAAD,CAAUvD,UAAWV,EAAQL,SAAUuE,MAAI,EAA3C,SACE,cAACC,EAAA,EAAD,CAAkBrE,MAAM,gBAI9B,cAACa,EAAA,EAAD,CAAWD,UAAWV,EAAQb,SAAUyB,SAAS,KAAKC,MAAM,SAA5D,SACE,cAACuD,EAAA,EAAD,CAAMC,WAAS,EAACrF,QAAS,EAAzB,SACGoE,GACCI,EAASc,KAAI,SAAC1B,GACZ,OACE,cAACwB,EAAA,EAAD,CAAMG,MAAI,EAAeC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA5C,SACE,cAACC,EAAA,EAAD,CAAMjE,UAAWV,EAAQZ,KAAzB,SACE,cAACwF,EAAA,EAAD,CAAalE,UAAWV,EAAQR,YAAhC,SACE,cAAC,EAAD,CAAYoD,KAAMA,SAHRA,EAAKiC,WAW9BvB,GACC,cAAC3C,EAAA,EAAD,CAAWC,SAAS,KAAKC,MAAM,SAA/B,SACE,cAACgB,EAAA,EAAD,CACEnB,UAAWV,EAAQf,QACnB8B,QAAQ,YACRjB,MAAM,UACNsB,KAAK,QACLY,QAvEW,SAACP,GACtBA,EAAEC,iBAEF5C,EAAM2D,QAAQC,KAAK,gBAAiB,CAAExE,WAAU2E,OAAMa,cA+D9C,wBAOWb,EAPX,yBAWFS,GACA,cAAC3C,EAAA,EAAD,CAAWC,SAAS,KAAKC,MAAM,SAA/B,SACE,cAACgB,EAAA,EAAD,CACEnB,UAAWV,EAAQf,QACnB8B,QAAQ,YACRjB,MAAM,UACNsB,KAAK,QACL0D,UAAQ,EALV,mBAOMjC,EAPN,6BAWJ,cAAClC,EAAA,EAAD,CAAWC,SAAS,KAAKC,MAAM,SAA/B,SACE,cAACgB,EAAA,EAAD,CACEnB,UAAWV,EAAQf,QACnB8B,QAAQ,YACRjB,MAAM,UACNsB,KAAK,QACL0D,UAAU,EACV9C,QA3Fc,SAACP,GACvBA,EAAEC,iBAEF5C,EAAM2D,QAAQC,KAAK,MAkFb,iDCvGKqC,EAdM,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACtB,OACE,qCACE,cAACvE,EAAA,EAAD,IACA,cAACK,EAAA,EAAD,CAAYhB,MAAM,UAAUiB,QAAQ,KAApC,SACGiE,EAAIC,QAEP,cAACnE,EAAA,EAAD,CAAYhB,MAAM,gBAAgBiB,QAAQ,YAA1C,SACGiE,EAAIE,kBCsDEC,EApDM,SAACrG,GACpB,IAAMkB,EAAUtB,IAEVD,EAAOK,EAAM2D,QAAQM,SAASC,MAC9BxC,EAAgB1B,EAAM0B,cACtBkD,EAAWjF,EAAKiF,SAChBb,EAAOpE,EAAKoE,KAWlB,OAJAtC,qBAAU,WACRC,EAAc,GAAD,OAAIqC,EAAJ,uBACZ,CAACA,EAAMrC,IAGR,+BACE,sBAAKE,UAAWV,EAAQnB,KAAxB,UACE,cAAC4B,EAAA,EAAD,IACA,cAACE,EAAA,EAAD,CAAWD,UAAWV,EAAQb,SAAUyB,SAAS,KAAKC,MAAM,SAA5D,SACE,cAACuD,EAAA,EAAD,CAAMC,WAAS,EAACrF,QAAS,EAAzB,SACG0E,EAASY,KAAI,SAACU,GACb,OACE,cAACZ,EAAA,EAAD,CAAMG,MAAI,EAAcC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAA5C,SACE,cAACC,EAAA,EAAD,CAAMjE,UAAWV,EAAQZ,KAAzB,SACE,cAACwF,EAAA,EAAD,CAAalE,UAAWV,EAAQR,YAAhC,SACE,cAAC,EAAD,CAAcwF,IAAKA,SAHTA,EAAIH,WAW5B,cAAClE,EAAA,EAAD,CAAWC,SAAS,KAAKC,MAAM,SAA/B,SACE,cAACgB,EAAA,EAAD,CACEnB,UAAWV,EAAQf,QACnB8B,QAAQ,YACRjB,MAAM,UACNsB,KAAK,QACLY,QAlCW,SAACP,GACpBA,EAAEC,iBACF5C,EAAM2D,QAAQ2C,UA2BR,8BAOiBvC,EAPjB,6BCJKwC,EAvCH,WACV,MAAoCpF,mBAAS,kBAA7C,mBAAOqF,EAAP,KAAmB9E,EAAnB,KAEA,OACE,qCACE,cAACC,EAAA,EAAD,IACA,cAAC8E,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,cAACC,EAAA,EAAD,UACE,cAAC3E,EAAA,EAAD,CAAYC,QAAQ,KAAKgB,cAAY,eAArC,SACGuD,QAIP,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEI,KAAK,gBACLC,OAAQ,SAAC7G,GAAD,OACN,cAAC,EAAD,aAAe0B,cAAeA,GAAmB1B,OAGrD,cAAC,IAAD,CACE4G,KAAK,cACLC,OAAQ,SAAC7G,GAAD,OACN,cAAC,EAAD,aAAc0B,cAAeA,GAAmB1B,OAGpD,cAAC,IAAD,CACE4G,KAAK,IACLC,OAAQ,SAAC7G,GAAD,OACN,cAAC,EAAD,aAAM0B,cAAeA,GAAmB1B,gBCjCtD8G,IAASD,OACP,cAAC,IAAME,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e9f8600b.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// Documentation is at https://developer.github.com/v3/\nconst BASE_URL = \"https://api.github.com\";\n\nexport { getRepos, getUserData };\n\nfunction getRepos(username) {\n  const url = `${BASE_URL}/users/${username}/repos?per_page=250`;\n  return axios.get(url).then(response => response.data);\n}\n\nfunction getUserData(username) {\n  return axios\n    .all([\n      axios.get(`${BASE_URL}/users/${username}`),\n      axios.get(`${BASE_URL}/users/${username}/orgs`)\n    ])\n    .then(([user, orgs]) => ({\n      user: user.data,\n      orgs: orgs.data\n    }));\n}\n","import { getUserData } from \"../api/github-api\";\n\nexport const isUsernameEmpty = (username) => {\n  return username === \"\";\n};\n\nexport const isAValideUsername = (username) => {\n  const result = getUserData(username)\n    .then(() => {\n      return true;\n    })\n    .catch(() => {\n      return false;\n    });\n  return result;\n};\n\nexport const isOnline = () => {\n  return window.navigator.onLine;\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst styles = makeStyles((theme) => ({\n  root: (props) => ({\n    padding: theme.spacing(0, 0, 6),\n  }),\n  buttons: () => ({\n    marginTop: \"20px\",\n  }),\n  cardGrid: () => ({\n    marginTop: \"40px\",\n  }),\n  card: () => ({\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  }),\n  cardContent: () => ({\n    flexGrow: 1,\n  }),\n  textField: () => ({\n    marginTop: \"20px\",\n  }),\n  backdrop: () => ({\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  }),\n}));\n\nexport default styles;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Typography,\n  CssBaseline,\n  Container,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nimport {\n  isUsernameEmpty,\n  isAValideUsername,\n  isOnline,\n} from \"../../utils/utils\";\n\nimport styles from \"../../styles\";\n\nconst User = (props) => {\n  const classes = styles();\n\n  const [username, setUsername] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const handleInput = (e) => {\n    e.preventDefault();\n    setUsername(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isUsernameEmpty(username)) {\n      setText(\"Enter Username\");\n      setError(true);\n      return;\n    } else {\n      setError(false);\n    }\n\n    if (!isOnline()) {\n      setText(\"No internet connection\");\n      setError(true);\n      return;\n    } else {\n      setError(false);\n    }\n    isAValideUsername(username)\n      .then((result) => {\n        return result;\n      })\n      .then((bool) => {\n        if (bool) {\n          props.history.push(\"/repository\", { username });\n        } else {\n          setText(\"Invalid username\");\n          setError(true);\n        }\n      });\n    // if (!proceed) {\n    // }\n    // console.log(isAValideUsername(username));\n  };\n\n  useEffect(() => {\n    props.setAppBarName(\"Github Project\");\n  });\n\n  return (\n    <>\n      <CssBaseline />\n      <main>\n        <div className={classes.root}>\n          <Container maxWidth=\"sm\">\n            <form align=\"center\">\n              <Typography\n                variant=\"h2\"\n                align=\"center\"\n                color=\"textPrimary\"\n                gutterBottom\n              >\n                Welcome\n              </Typography>\n              <Typography variant=\"h6\">\n                Please Enter Your Github Username:\n              </Typography>\n              <TextField\n                className={classes.textField}\n                variant=\"outlined\"\n                required\n                label=\"required\"\n                size=\"small\"\n                inputProps={{ \"data-testid\": \"input-username\" }}\n                error={error}\n                helperText={text}\n                value={username}\n                onChange={handleInput}\n              />\n              <Container maxWidth=\"sm\" fixed>\n                <Button\n                  type=\"submit\"\n                  className={classes.buttons}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  data-testid=\"submit-btn\"\n                  onClick={handleSubmit}\n                >\n                  Submit\n                </Button>\n              </Container>\n            </form>\n          </Container>\n        </div>\n      </main>\n    </>\n  );\n};\n\nexport default User;\n","import React from \"react\";\nimport { CssBaseline, Typography } from \"@material-ui/core\";\n\nconst Repository = ({ repo }) => {\n  // console.log(repo);\n  return (\n    <>\n      <CssBaseline />\n      <Typography color=\"primary\" variant=\"h6\">\n        {repo.name}\n      </Typography>\n    </>\n  );\n};\n\nexport default Repository;\n","import React, { useState, useEffect } from \"react\";\nimport { getRepos, getUserData } from \"../api/github-api\";\nimport Repository from \"./Repository\";\nimport {\n  CssBaseline,\n  Container,\n  Button,\n  Grid,\n  Card,\n  CardContent,\n  Backdrop,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nimport styles from \"../styles\";\n\nconst Repositories = (props) => {\n  const classes = styles();\n\n  const username = props.history.location.state;\n  const setAppBarName = props.setAppBarName;\n  // console.log(username);\n  const [name, setName] = useState(null);\n  const [showBackdrop, setShowBackdrop] = useState(true);\n  const [isRepoLoaded, setIsRepoLoaded] = useState(false);\n  const [isOrgsLoaded, setIsOrgsLoaded] = useState(false);\n  const [userRepo, setUserRepo] = useState([]);\n  const [userOrgs, setUserOrgs] = useState([]);\n\n  const handleViewOrgs = (e) => {\n    e.preventDefault();\n    // console.log(props);\n    props.history.push(\"/organisation\", { username, name, userOrgs });\n  };\n\n  const handleNewSearch = (e) => {\n    e.preventDefault();\n    // console.log(props);\n    props.history.push(\"/\");\n  };\n\n  useEffect(() => {\n    getRepos(username.username).then((result) => {\n      setUserRepo(result);\n      setIsRepoLoaded(true);\n      setShowBackdrop(false);\n    });\n  }, [username.username]);\n\n  useEffect(() => {\n    getUserData(username.username).then((userData) => {\n      setUserOrgs(userData.orgs);\n      // console.log(userData.user.name);\n      setName(userData.user.name);\n      if (userOrgs.length === 0) return;\n      setIsOrgsLoaded(true);\n    });\n  }, [username.username, userOrgs.length]);\n\n  useEffect(() => {\n    if (name === null) {\n      setName(username.username);\n    }\n    setAppBarName(`${name}'s Repositories`);\n  }, [name, setAppBarName, username.username]);\n\n  return (\n    <main>\n      <div className={classes.root}>\n        <CssBaseline />\n        {showBackdrop && (\n          <Container className={classes.cardGrid} maxWidth=\"md\" align=\"center\">\n            <Backdrop className={classes.backdrop} open>\n              <CircularProgress color=\"inherit\" />\n            </Backdrop>\n          </Container>\n        )}\n        <Container className={classes.cardGrid} maxWidth=\"md\" align=\"center\">\n          <Grid container spacing={4}>\n            {isRepoLoaded &&\n              userRepo.map((repo) => {\n                return (\n                  <Grid item key={repo.id} xs={12} sm={6} md={6}>\n                    <Card className={classes.card}>\n                      <CardContent className={classes.cardContent}>\n                        <Repository repo={repo} />\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                );\n              })}\n          </Grid>\n        </Container>\n        {isOrgsLoaded && (\n          <Container maxWidth=\"sm\" align=\"center\">\n            <Button\n              className={classes.buttons}\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              onClick={handleViewOrgs}\n            >\n              {`View ${name}'s Organisations`}\n            </Button>\n          </Container>\n        )}\n        {!isOrgsLoaded && (\n          <Container maxWidth=\"sm\" align=\"center\">\n            <Button\n              className={classes.buttons}\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              disabled\n            >\n              {`${name} Have No Organisation`}\n            </Button>\n          </Container>\n        )}\n        <Container maxWidth=\"sm\" align=\"center\">\n          <Button\n            className={classes.buttons}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            disabled={false}\n            onClick={handleNewSearch}\n          >\n            {`Search for A Different user`}\n          </Button>\n        </Container>\n      </div>\n    </main>\n  );\n};\n\nexport default Repositories;\n","import React from \"react\";\nimport { CssBaseline, Typography } from \"@material-ui/core\";\n\nconst Organisation = ({ org }) => {\n  return (\n    <>\n      <CssBaseline />\n      <Typography color=\"primary\" variant=\"h6\">\n        {org.login}\n      </Typography>\n      <Typography color=\"textSecondary\" variant=\"subtitle1\">\n        {org.description}\n      </Typography>\n    </>\n  );\n};\n\nexport default Organisation;\n","import React, { useEffect } from \"react\";\nimport {\n  CssBaseline,\n  Container,\n  Grid,\n  Card,\n  CardContent,\n  Button,\n} from \"@material-ui/core\";\nimport Organisation from \"./Organisation\";\n\nimport styles from \"../styles\";\n\nconst Organistions = (props) => {\n  const classes = styles();\n\n  const data = props.history.location.state;\n  const setAppBarName = props.setAppBarName;\n  const userOrgs = data.userOrgs;\n  const name = data.name;\n\n  const handleGoBack = (e) => {\n    e.preventDefault();\n    props.history.goBack();\n  };\n\n  useEffect(() => {\n    setAppBarName(`${name}'s Organisations`);\n  }, [name, setAppBarName]);\n\n  return (\n    <main>\n      <div className={classes.root}>\n        <CssBaseline />\n        <Container className={classes.cardGrid} maxWidth=\"md\" align=\"center\">\n          <Grid container spacing={4}>\n            {userOrgs.map((org) => {\n              return (\n                <Grid item key={org.id} xs={12} sm={12} md={12}>\n                  <Card className={classes.card}>\n                    <CardContent className={classes.cardContent}>\n                      <Organisation org={org} />\n                    </CardContent>\n                  </Card>\n                </Grid>\n              );\n            })}\n          </Grid>\n        </Container>\n        <Container maxWidth=\"sm\" align=\"center\">\n          <Button\n            className={classes.buttons}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            onClick={handleGoBack}\n          >\n            {`Go back to ${name}'s Repositories`}\n          </Button>\n        </Container>\n      </div>\n    </main>\n  );\n};\n\nexport default Organistions;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { AppBar, Toolbar, Typography, CssBaseline } from \"@material-ui/core\";\nimport User from \"./components/User/User\";\nimport Repositories from \"./components/Repositories\";\nimport Organisations from \"./components/Organistions\";\nimport { useState } from \"react\";\n\nconst App = () => {\n  const [appBarName, setAppBarName] = useState(\"Github Project\");\n\n  return (\n    <>\n      <CssBaseline />\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <Typography variant=\"h6\" data-testid=\"app-bar-typo\">\n            {appBarName}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Router>\n        <Switch>\n          <Route\n            path=\"/organisation\"\n            render={(props) => (\n              <Organisations setAppBarName={setAppBarName} {...props} />\n            )}\n          />\n          <Route\n            path=\"/repository\"\n            render={(props) => (\n              <Repositories setAppBarName={setAppBarName} {...props} />\n            )}\n          />\n          <Route\n            path=\"/\"\n            render={(props) => (\n              <User setAppBarName={setAppBarName} {...props} />\n            )}\n          />\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}